{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport ac from \"./actionTypeAsync\";\nexport const appSlice = createSlice({\n  name: \"category\",\n  initialState: {\n    categories: null,\n    isLoading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    // Peding ...\n    builder.addCase(actionFetchCategory.pending, (state, action) => {\n      state.categories = [];\n      state.payload = false;\n    });\n\n    // full fill ...\n    builder.addCase(actionFetchCategory.fulfilled, (state, action) => {\n      state.categories = action.payload;\n      state.payload = true;\n      //   console.log(\"categories >>>>\", state.categories);\n    });\n\n    // erorr\n    builder.addCase(actionFetchCategory.rejected, (state, action) => {\n      state.categories = null;\n      state.payload = false;\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {} = appSlice.actions;\nexport default appSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","ac","appSlice","name","initialState","categories","isLoading","reducers","extraReducers","builder","addCase","actionFetchCategory","pending","state","action","payload","fulfilled","rejected","actions","reducer"],"sources":["T:/FullStack/Buynow/frontend/src/store/appSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport ac from \"./actionTypeAsync\";\r\nexport const appSlice = createSlice({\r\n  name: \"category\",\r\n  initialState: {\r\n    categories: null,\r\n    isLoading: false,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Peding ...\r\n    builder.addCase(actionFetchCategory.pending, (state, action) => {\r\n      state.categories = [];\r\n      state.payload = false;\r\n    });\r\n\r\n    // full fill ...\r\n    builder.addCase(actionFetchCategory.fulfilled, (state, action) => {\r\n      state.categories = action.payload;\r\n      state.payload = true;\r\n      //   console.log(\"categories >>>>\", state.categories);\r\n    });\r\n\r\n    // erorr\r\n    builder.addCase(actionFetchCategory.rejected, (state, action) => {\r\n      state.categories = null;\r\n      state.payload = false;\r\n    });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {} = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,EAAE,MAAM,mBAAmB;AAClC,OAAO,MAAMC,QAAQ,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACC,mBAAmB,CAACC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9DD,KAAK,CAACR,UAAU,GAAG,EAAE;MACrBQ,KAAK,CAACE,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;;IAEF;IACAN,OAAO,CAACC,OAAO,CAACC,mBAAmB,CAACK,SAAS,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChED,KAAK,CAACR,UAAU,GAAGS,MAAM,CAACC,OAAO;MACjCF,KAAK,CAACE,OAAO,GAAG,IAAI;MACpB;IACF,CAAC,CAAC;;IAEF;IACAN,OAAO,CAACC,OAAO,CAACC,mBAAmB,CAACM,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/DD,KAAK,CAACR,UAAU,GAAG,IAAI;MACvBQ,KAAK,CAACE,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM,CAAC,CAAC,GAAGb,QAAQ,CAACgB,OAAO;AAElC,eAAehB,QAAQ,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}